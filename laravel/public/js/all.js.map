{"version":3,"sources":["config.js","layoutController.js","homeController.js","loginController.js","searchController.js","registerController.js","autocompleteDirective.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var app = angular.module('myApp', []);","\r\n\r\napp.controller('layoutController', function($scope, $http) {\r\n    $scope.layout = \r\n    {\r\n        logout: function() {\r\n\r\n            var login = this;\r\n            $http.post('/api/login/destroy')\r\n            .success(function(data) \r\n                {\r\n                    window.location = '/';\r\n                });\r\n        }\r\n    \t\r\n\t}\r\n});","\r\n\r\napp.controller('homeController', function($scope, $http, $location) {\r\n    $scope.home = \r\n    {\r\n    \tcontrol: {\r\n    \t\tisLoading: false\r\n    \t},\r\n        search: {\r\n            location: ''\r\n        },\r\n    \tprofiles: null,\r\n    \tinit: function ()\r\n    \t{\r\n    \t\tvar home = this;\r\n    \t},\r\n        geoId: null,\r\n    \tsubmit: function () {\r\n            var home = this;\r\n            window.location = \"s/\" + home.search.location;\r\n        },\r\n        geoid: null,\r\n\t}\r\n});","\r\n\r\napp.controller('loginController', function($scope, $http) {\r\n    $scope.login = \r\n    {\r\n        inputs: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n    \tcontrol: {\r\n    \t\tisLoading: false\r\n    \t},\r\n        validation: {\r\n            email: {\r\n                show: false,\r\n                message: ''\r\n            }\r\n        },\r\n        submit: function() {\r\n\r\n            var login = this;\r\n            $http.post('/api/login/auth', login.inputs)\r\n            .success(function(data) \r\n                {\r\n                    if (data === true)\r\n                    {\r\n                        window.location = \"dashboard\" ;\r\n                    }else\r\n                    {\r\n                        console.log('error');\r\n                        login.validation.show = true;\r\n                        login.validation.message = 'details provided are incorrect';\r\n                    }\r\n                });\r\n        }\r\n    \t\r\n\t}\r\n});","app.controller('searchController', function($scope, $http) {\r\n    $scope.search = \r\n    {\r\n    \tcontrol: {\r\n            isLoading: true\r\n        },\r\n        inputs: {\r\n            location: ''\r\n        },\r\n        geocode: null,\r\n        profiles: null,\r\n        locationTitle:  '',\r\n        init: function (location)\r\n        {\r\n            var search = this;\r\n            search.inputs.location = location;\r\n            search.control.isLoading = true;\r\n\r\n            \r\n\r\n                search.searchGuides();\r\n            \r\n        },\r\n        searchGuides: function()\r\n        {\r\n            var search = this;\r\n            search.control.isLoading = true;\r\n\r\n            search.locationTitle = search.inputs.location;\r\n            var service = new google.maps.places.AutocompleteService();\r\n            var myDataPromise = service.getQueryPredictions({ input: search.inputs.location }, function(predictions, status) \r\n            {\r\n                if (predictions !== null) \r\n                {\r\n                  var foundItem = predictions[0];\r\n                \r\n                  if(foundItem.types[0] === 'locality'){\r\n                      search.geocode = foundItem.id;\r\n                    }else\r\n                    {\r\n                        search.geocode = null;\r\n                    }\r\n                }else\r\n                {\r\n                   search.geocode = null; \r\n                }\r\n            \r\n\r\n                console.log(search.geocode);\r\n\r\n                if (search.geocode !== null)\r\n                {\r\n                    $http.get('/api/guides/location?location=' + search.geocode)\r\n                    .success(function(data){\r\n                        search.profiles = data;\r\n                        search.control.isLoading = false;\r\n                    })\r\n                    .error(function (data)\r\n                    {\r\n                       search.profiles = null; \r\n                        search.control.isLoading = false;\r\n                    });\r\n                }else\r\n                {\r\n                    search.profiles = null;\r\n                    search.control.isLoading = false;\r\n                    console.log(search.control.isLoading);\r\n                    $scope.$apply();\r\n                }\r\n            });\r\n        }        \r\n\t}\r\n});","\r\n\r\napp.controller('registerController', function($scope, $http) {\r\n    $scope.register = \r\n    {\r\n        inputs: {\r\n            firstname: '',\r\n            surname: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n    \tcontrol: {\r\n    \t\tisLoading: false\r\n    \t},\r\n        submit: function () {\r\n            var register = this;\r\n            $http.post('/api/users/create', register.inputs)\r\n            .success(function(data) \r\n                    {\r\n                        if (data === true)\r\n                        {\r\n                            console.log('success');\r\n                        }else\r\n                        {\r\n                            console.log('error');\r\n                        }\r\n                });\r\n        }\r\n    \t\r\n\t}\r\n});","\r\napp.directive('googleplace', function() {\r\n    return {\r\n        require: 'ngModel',\r\n        link: function(scope, element, attrs, model) {\r\n            var options = {componentRestrictions: {country: 'gb'}, types: ['(cities)']};\r\n           \r\n            scope.gPlace = new google.maps.places.Autocomplete(element[0], options);\r\n            \r\n            google.maps.event.addListener(scope.gPlace, 'place_changed', function() {\r\n                scope.$apply(function() {\r\n                   scope.geoId = scope.gPlace.getPlace().id;\r\n                   \r\n                    model.$setViewValue(element.val());                \r\n                });\r\n            });\r\n\r\n        },\r\n    };\r\n});"],"sourceRoot":"/source/"}